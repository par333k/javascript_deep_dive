// 산술 연산자는 피연산자를 대상으로 수학적 계산을 수행해 새로운 숫자 값을 만든다. 산술 연산이 불가능한 경우, NaN을 반환한다.
// 산술 연산자는 피연산자의 개수에 따라 이항 산술 연산자와 단항 산술 연산자로 구분할 수 있다.

// 이항 산술 연산자
// 2개의 피연산자를 산술 연산하여 숫자 값을 만든다.
// 모든 이항 산술 연산자는 피연산자의 값을 변경하는 부수효과(side effect)가 없다. 언제나 새로운 값을 만든다.
5 + 2; // 7
5 - 2; // 3
5 * 2; //10
5 / 2; //2.5
5 % 2; //1

// 단항 산술 연산자
// 1개의 피연산자를 산술 연산하여 숫자 값을 만든다. 부수효과가 있을 수 있다. 증가/감소 연산을 하면 피연산자의 값을 변경하는 암묵적 할당이 이뤄진다.

let x = 1;

// ++ 연산자는 피연산자의 값을 변경하는 암묵적 할당이 이뤄진다.
x++; // x = x + 1;
console.log(x); // 2

// -- 연산자는 피연산자의 값을 변경하는 암묵적 할당이 이뤄진다.
x--; // x = x - 1;
console.log(x); // 1

// 증가, 감소 연산자는 위치에 의미가 있다.
// 앞에 위치할 경우 피연산자의 값을 변경한 후 다른 연산을 수행
// 뒤에 위치할 경우 다른 연산을 수행한 후 피연산자의 값을 변경

let y = 5, result;

// 선할당 후증가
result = x++;
console.log(result, x); // 5, 6

// 선증가 후할당
result = ++x;
console.log(result, x); // 7, 7

// 선할당 후감소
result = x--;
console.log(result, x); // 7, 6

// 선감소 후할당
result = --x;
console.log(result, x); // 5, 5

// 아무런 효과가 없다.
+10; // 10
+(-10) // -10


// 숫자 타입이 아닌 피연산자에 + 단항 연산자를 사용하면 피연산자를 숫자 타입으로 변환하여 반환한다.
// 이 때 피연산자를 변경하는 것은 아니고 숫자 타입으로 변환한 값을 생성해서 반환한다. 따라서 부수효과는 없다.

let x  = '1';

// 문자열을 숫자로 타입 변환한다.
console.log(+x); // 1
// 부수 효과는 없다.
console.log(x);  // "1"

// 불리언 값을 숫자로 타입 변환한다.
x = true;
console.log(+x); // 1
// 부수 효과는 없다.
console.log(x);  // true

// 불리언 값을 숫자로 타입 변환한다.
x = false;
console.log(+x); // 0
// 부수 효과는 없다.
console.log(x);  // false

// 문자열을 숫자로 타입 변환할 수 없으므로 NaN을 반환한다.
x = 'Hello';
console.log(+x); // NaN
// 부수 효과는 없다.
console.log(x);  // "Hello"

// -단항 연산자는 피연산자의 부호를 반전한 값을 반환한다.
// + 와 타입 변환과 부수효과 없음은 동일하다.

// 부호를 반전한다.
-(-10); // -> 10

// 문자열을 숫자로 타입 변환한다.
-'10'; // -> -10

// 불리언 값을 숫자로 타입 변환한다.
-true; // -> -1

// 문자열은 숫자로 타입 변환할 수 없으므로 NaN을 반환한다.
-'Hello'; // -> NaN

// 문자열 연결 연산자
// + 연산자는 피연산자 중 하나 이상이 문자열인 경우 문자열 연결 연산자로 동작한다. 그 외에 경우는 산술 연산자로 동작한다.

// 문자열 연결 연산자
'1' + 2; // -> '12'
1 + '2'; // -> '12'

// 산술 연산자
1 + 2; // -> 3

// true는 1로 타입 변환된다.
1 + true; // -> 2

// false는 0으로 타입 변환된다.
1 + false; // -> 1

// null은 0으로 타입 변환된다.
1 + null; // -> 1

// undefined는 숫자로 타입 변환되지 않는다.
+undefined;    // -> NaN
1 + undefined; // -> NaN

